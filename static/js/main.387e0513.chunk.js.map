{"version":3,"sources":["containers/Layout/Layout.module.css","C:/Users/Bobby/Pictures/Capture.JPG","components/Logo/Logo.module.css","containers/Layout/Layout.js","Keys.js","axios-movies.js","store/actions/actionTypes.js","store/actions/netflix.js","components/Netflix/Navigation/Navigation.js","components/Logo/Logo.js","components/Netflix/UserProfile/UserProfile.js","components/Netflix/Hero/HeroButton/HeroButton.js","components/Netflix/Hero/Hero.js","components/Netflix/TitleListItems/ListToggle/ListToggle.js","components/Netflix/TitleListItems/Item.js","containers/TitleList/TitleList.js","components/Netflix/Logo/Logo.js","containers/NetflixClone/NetflixClone.js","App.js","serviceWorker.js","store/reducers/netflix.js","index.js"],"names":["module","exports","Layout","Main","__webpack_require__","p","Logo","react_default","a","createElement","className","styles","this","props","children","Component","api_key","instance","axios","create","baseURL","SET_CONTENT","FETCH_DATA_FAILED","UPDATE_SEARCH","loadContent","payload","dispatch","get","url","keys","then","response","data","mounted","results","type","actionTypes","contentData","catch","error","fetchDataFailed","nav","id","logo","src","logoImg","alt","userProfile","heroButton","href","data-primary","primary","text","hero","style","backgroundImage","HeroButton","listToggle","onClick","toggle","data-toggled","toggleStatus","ListToggle","item","backdrop","title","score","overview","TitleList","state","toggled","requestUrl","_this","setState","err","console","log","componentWillReceiveProps","nextProps","componentDidMount","handleClick","_this2","titles","map","index","name","backDrop","backdrop_path","original_title","Item","key","vote_average","ref","data-loaded","connect","actions","version","width","height","transform","d","fill","fillOpacity","fillRule","stroke","NetflixClone","searchTerm","handleKeyUp","event","searchUrl","updateSearch","handleChange","target","value","Logo_Logo","Navigation","onKeyUp","onChange","placeholder","UserProfile","Hero","containers_TitleList_TitleList","onInitMovies","search","App","routes","Switch","Route","component","Redirect","to","containers_Layout_Layout","withRouter","Boolean","window","location","hostname","match","initialState","updateObject","oldObject","updatedProperties","Object","objectSpread","reducer","arguments","length","undefined","action","setContent","composeEnhancers","compose","store","createStore","netflix","applyMiddleware","thunk","app","es","BrowserRouter","basename","process","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.387e0513.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__XSHvJ\",\"Main\":\"Layout_Main__1CLzd\"};","module.exports = __webpack_public_path__ + \"static/media/Capture.a5ef440c.JPG\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3u_ga\"};","import React, { Component } from 'react';\r\nimport styles from './Layout.module.css'\r\n\r\n\r\nclass Layout extends Component {\r\n    \r\n    render () {\r\n        return (\r\n            <div className={styles.Layout}>\r\n                <main className={styles.Main}>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","export const api_key = '268cd6b30005c8d8f6ed0b33d60ec16c';","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/'\r\n})\r\n\r\nexport default instance;","export const SET_CONTENT = 'SET_CONTENT';\r\nexport const FETCH_DATA_FAILED = 'FETCH_DATA_FAILED';\r\nexport const UPDATE_SEARCH = 'UPDATE_SEARCH';","import axios from '../../axios-movies'\r\nimport * as actionTypes from './actionTypes'\r\nimport * as keys from '../../Keys'\r\n\r\nexport const initMovies = () => {\r\n    return {\r\n        type: 'INIT_MOVIES'\r\n    }    \r\n}\r\n\r\nexport const updateSearch = (search) => {\r\n    return {\r\n        type: actionTypes,\r\n        searchUrl: search\r\n    }\r\n}\r\n\r\nexport const setData = (data, mounted) => {\r\n    return {\r\n        type: actionTypes.SET_CONTENT,\r\n        contentData: data,\r\n        mounted: mounted\r\n    }\r\n}\r\n\r\nexport const fetchDataFailed = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_DATA_FAILED,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const loadContent = (payload) => {\r\n    return dispatch => {\r\n        axios.get(payload.url + '&api_key=' + keys.api_key)\r\n            .then(response => {\r\n                dispatch(setData(response.data.results, payload.mounted))\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchDataFailed(error))\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst nav = () => {\r\n    return (\r\n        <div id=\"navigation\" className=\"Navigation\">\r\n            <nav>\r\n                <ul>\r\n                    <li>Browse</li>\r\n                    <li>My list</li>\r\n                    <li>Top picks</li>\r\n                    <li>Recent</li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default nav;\r\n\r\n","import React from 'react';\r\nimport logoImg from 'C:\\\\Users\\\\Bobby\\\\Pictures\\\\Capture.JPG'\r\nimport styles from './Logo.module.css'\r\n\r\nconst logo = (props) => (\r\n        <div className={styles.Logo}>\r\n            <img src={logoImg} alt=\"Logo\" />\r\n        </div>\r\n)\r\n\r\nexport default logo;","import React from 'react';\r\nimport Logo from '../../../components/Logo/Logo'\r\n\r\nconst userProfile = (props) => {\r\n    return (\r\n        <div className=\"UserProfile\">\r\n          <div className=\"User\">\r\n            <div className=\"name\">Jack Oliver</div>\r\n            <Logo />\r\n          </div>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default userProfile;","import React from 'react';\r\n\r\nconst heroButton = (props) => {\r\n    return (\r\n        <a href=\"/\" className=\"Button\" data-primary={props.primary}>{props.text}</a>\r\n    )\r\n}\r\n\r\nexport default heroButton;","import React from 'react';\r\nimport HeroButton from './HeroButton/HeroButton';\r\n\r\nconst hero = (props) => {\r\n    return (\r\n        <div id=\"hero\" className=\"Hero\" style={{ backgroundImage: 'url(https://images.alphacoders.com/633/633643.jpg)' }}>\r\n            <div className=\"content\">\r\n                <img className=\"logo\" src=\"http://www.returndates.com/backgrounds/narcos.logo.png\" alt=\"narcos background\" />\r\n                <h2>Season 2 now available</h2>\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Doloremque id quam sapiente unde voluptatum alias vero debitis, magnam quis quod.</p>\r\n                <div className=\"button-wrapper\">\r\n                    <HeroButton primary={true} text=\"Watch now\" />\r\n                    <HeroButton primary={false} text=\"+ My list\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"overlay\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default hero;","import React from 'react';\r\nimport styles from './ListToggle.module.css'\r\n\r\nconst listToggle = (props) => {\r\n    return (\r\n        <div onClick={props.toggle} data-toggled={props.toggleStatus} className={styles.ListToggle}>\r\n            <div>\r\n                <i className=\"fa fa-fw fa-plus\"></i>\r\n                <i className=\"fa fa-fw fa-check\"></i>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default listToggle;","import React from 'react';\r\n\r\nimport ListToggle from './ListToggle/ListToggle'\r\n\r\nconst item = (props) => {\r\n    return (\r\n        <div className=\"Item\" style={{ backgroundImage: 'url(' + props.backdrop + ')' }} >\r\n            <div className=\"overlay\">\r\n                <div className=\"title\">{props.title}</div>\r\n                <div className=\"rating\">{props.score} / 10</div>\r\n                <div className=\"plot\">{props.overview}</div>\r\n                <ListToggle toggle={props.toggle} toggleStatus={props.toggleStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default item;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as actions from '../../store/actions/netflix'\r\n// import styles from './TitleList.module.css'\r\nimport Item from '../../components/Netflix/TitleListItems/Item';\r\nimport '../../App.css'\r\nimport * as keys from '../../Keys'\r\nimport axios from '../../axios-movies';\r\n\r\n\r\nclass TitleList extends Component {\r\n    state = {\r\n        toggled: false,\r\n        data: [],\r\n        mounted: false\r\n    }\r\n\r\n    loadContent = () => {\r\n        let requestUrl = 'https://api.themoviedb.org/3/' + this.props.url + '&api_key=' + keys.api_key;\r\n        axios.get(requestUrl)\r\n            .then( response => {\r\n                this.setState({data: response.data})\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })        \r\n    }\r\n    componentWillReceiveProps = (nextProps) => {\r\n        // if (nextProps.url !== this.props.url && nextProps.url !== '') {\r\n        //     this.props.loadContent({ mounted: true, url: nextProps.url })\r\n        // }\r\n        if(nextProps.url !== this.props.url && nextProps.url !== ''){\r\n            this.setState({mounted:true,url:nextProps.url},()=>{\r\n              this.loadContent();\r\n            });\r\n            \r\n          }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // if (this.props.url !== '') {\r\n        //     this.props.loadContent({ mounted: true, url: this.props.url })\r\n        // }\r\n        if(this.props.url !== ''){\r\n            this.loadContent();\r\n            this.setState({mounted:true});\r\n          }\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({ toggled: !this.state.toggled })\r\n    }\r\n\r\n    render() {\r\n        let titles = '';\r\n        if (this.state.data.results) {\r\n            titles = this.state.data.results.map((title, index) => {\r\n                if (index < 5) {\r\n                    let name = '';\r\n                    const backDrop = 'http://image.tmdb.org/t/p/original' + title.backdrop_path;\r\n                    if (!title.name) {\r\n                        name = title.original_title;\r\n                    } else {\r\n                        name = title.name\r\n                    }\r\n                    return (\r\n                        <Item key={title.id} title={name} score={title.vote_average} toggle={this.handleClick} toggleStatus={this.state.toggled} overview={title.overview} backdrop={backDrop} />\r\n                    );\r\n                } else {\r\n                    return (<div key={title.id}></div>)\r\n                }\r\n            });\r\n        }\r\n        return (\r\n            <div ref=\"titlecategory\" className=\"TitleList\" data-loaded={this.state.mounted}>\r\n                <div className=\"Title\">\r\n                    <h1>{this.props.title}</h1>\r\n                    <div className=\"titles-wrapper\">\r\n                        {titles}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        error: state.error,\r\n        mounted: state.mounted,\r\n        data: state.contentData\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loadContent: (payload) => dispatch(actions.loadContent(payload))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TitleList)","import React from 'react';\r\n\r\nconst logo = (props) => {\r\n    return (\r\n        <div id=\"logo\" className=\"Logo\">\r\n            <svg version=\"1.1\" width=\"300\" height=\"81.386726\" id=\"svg3262\">\r\n                <g transform=\"translate(-384.28572,-428.81172)\" id=\"layer1\">\r\n                    <g transform=\"matrix(2.5445375,0,0,2.5445375,1157.1714,-1457.8678)\" id=\"g3235\">\r\n                        <path d=\"m -203.09972,771.41415 c 1.6425,0.15875 3.2825,0.33 4.92,0.5075 l 3.615,-8.92625 3.43625,9.74875 c 1.76375,0.22125 3.525,0.4525 5.2825,0.695 l -6.02375,-17.09625 6.02625,-14.88 -5.10375,0 -0.0525,0.0725 -3.255,8.03875 -2.8575,-8.11125 -5.03875,0 5.2025,14.7625 -6.15125,15.18875 z\" id=\"path3015\" style={{fill:'#b81d24', fillOpacity: 1, fillRule:'nonzero', stroke:'none'}} />\r\n                        <path d=\"m -206.91147,771.06478 0,-29.60125 -5.0375,0 0,29.18625 c 1.68125,0.12875 3.36125,0.26875 5.0375,0.415\" id=\"path3019\" style={{fill:'#b81d24', fillOpacity: 1, fillRule:'nonzero', stroke:'none'}} />\r\n                        <path d=\"m -244.7486,769.4089 c 1.36,0 2.7175,0.01 4.07375,0.0213 l 0,-10.875 6.05125,0 0,-4.63125 -6.05125,0 0,-7.825 6.96875,0 0,-4.63625 -12.02625,0 0,27.95 c 0.3275,0 0.655,-0.004 0.98375,-0.004\" id=\"path3023\" style={{fill:'#b81d24', fillOpacity: 1, fillRule:'nonzero', stroke:'none'}} />\r\n                        <path d=\"m -260.3881,769.69191 c 1.6775,-0.06 3.3575,-0.11 5.04,-0.15125 l 0,-23.44125 4.7075,0 0,-4.63625 -14.45625,0 0,4.63625 4.70875,0 0,23.5925 z\" id=\"path3035\" style={{fill:'#b81d24', fillOpacity: 1, fillRule:'nonzero', stroke:'none'}} />\r\n                        <path d=\"m -298.91059,772.81378 0,-17.63625 5.96375,16.92375 c 1.83375,-0.20625 3.67125,-0.4 5.5125,-0.5825 l 0,-30.055 -4.8325,0 0,18.2675 -6.43625,-18.2675 -0.2075,0 -4.8325,0 0,31.98375 0.03,0 c 1.5975,-0.22125 3.19875,-0.43125 4.8025,-0.63375\" id=\"path3039\" style={{fill:'#b81d24', fillOpacity: 1, fillRule:'nonzero', stroke:'none'}} />\r\n                        <path d=\"m -269.95297,746.09903 0,-4.63625 -12.0275,0 0,24.9125 0,4.6375 0,0.004 c 3.99125,-0.345 7.99625,-0.63375 12.0175,-0.86875 l 0,-0.004 0,-1.33625 0,-3.3 c -2.325,0.135 -4.645,0.29125 -6.96,0.46375 l 0,-7.415 6.05125,0 0,-4.63375 -6.05125,0 0,-7.82375 6.97,0 z\" id=\"path3051\" style={{fill:'#b81d24', fillOpacity: 1, fillRule:'nonzero', stroke:'none'}} />\r\n                        <path d=\"m -223.72272,765.2864 0,-23.82375 -5.05875,0 0,23.605 0,4.63625 0,0.005 c 4.02375,0.1475 8.0325,0.35375 12.0275,0.6125 l 0,-0.006 0,-1.4975 0,-3.13875 c -2.31875,-0.15 -4.64125,-0.28 -6.96875,-0.3925\" id=\"path3055\" style={{fill:'#b81d24', fillOpacity: 1, fillRule:'nonzero', stroke:'none'}} />\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default logo;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as keys from '../../Keys'\r\nimport * as actions from '../../store/actions/netflix'\r\n// import styles from './NetflixClone.module.css'\r\nimport Navigation from '../../components/Netflix/Navigation/Navigation';\r\nimport UserProfile from '../../components/Netflix/UserProfile/UserProfile';\r\nimport Hero from '../../components/Netflix/Hero/Hero';\r\nimport TitleList from '../TitleList/TitleList';\r\nimport Logo from '../../components/Netflix/Logo/Logo';\r\nimport '../../App.css'\r\n\r\nclass NetflixClone extends Component {\r\n    state = {\r\n        searchTerm: \"\"\r\n    }\r\n\r\n    handleKeyUp = (event) => {\r\n        if (event.key === 'Enter' && this.props.searchTerm !== ''){\r\n            const searchUrl = \"search/multi?query=\" + this.state.searchTerm + \"&api_key=\" + keys.api_key;\r\n            this.props.updateSearch(searchUrl);\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({searchTerm: event.target.value});\r\n    }\r\n\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <header className=\"Header\">\r\n                    <Logo />\r\n                    <Navigation />\r\n                    <div className=\"Search\">\r\n                        <input onKeyUp={this.handleKeyUp} onChange={this.handleChange} type=\"search\" placeholder=\"Search for a title...\" value={this.state.searchTerm} />\r\n                    </div>\r\n                    <UserProfile />\r\n                </header>\r\n                <Hero />\r\n                <TitleList title=\"Search Results\" url={this.props.searchUrl} />\r\n                <TitleList title=\"Top TV picks for Jack\" url='discover/tv?sort_by=popularity.desc&page=1' />\r\n                <TitleList title=\"Trending now\" url='discover/movie?sort_by=popularity.desc&page=1' />\r\n                <TitleList title=\"Most watched in Horror\" url='genre/27/movies?sort_by=popularity.desc&page=1' />\r\n                <TitleList title=\"Sci-Fi greats\" url='genre/878/movies?sort_by=popularity.desc&page=1' />\r\n                <TitleList title=\"Comedy magic\" url='genre/35/movies?sort_by=popularity.desc&page=1' />\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchUrl: state.searchUrl,\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitMovies: () => dispatch(actions.initMovies()),\r\n        updateSearch: (search) => dispatch(actions.updateSearch(search))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NetflixClone)","import React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\n\nimport Layout from './containers/Layout/Layout';\nimport NetflixClone from './containers/NetflixClone/NetflixClone'\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    let routes = (\n      <Switch>\n        <Route component={NetflixClone}/>\n        <Redirect to=\"/\" />\n      </Switch>\n    )\n    return (\n      <div className=\"App\">\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    searchUrl: \"\",\r\n    contentData: null,\r\n    mounted: false,\r\n    error: false\r\n}\r\n\r\nconst updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}\r\n\r\nconst setContent = (state, action) => {\r\n    return updateObject( state, {\r\n        contentData: action.contentData,\r\n        mounted: action.mounted\r\n    })\r\n}\r\n\r\nconst fetchDataFailed = (state, action) => {\r\n    return updateObject(state, {error: action.error})\r\n}\r\n\r\nconst updateSearch = (state, action) => {\r\n    return updateObject(state, {searchUrl: action.searchUrl})\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.SET_CONTENT:\r\n            return setContent(state, action);\r\n        case actionTypes.FETCH_DATA_FAILED:\r\n            return fetchDataFailed(state, action);\r\n        case actionTypes.UPDATE_SEARCH:\r\n            return updateSearch(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport {createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport netflix from './store/reducers/netflix'\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose : null || compose\n\nconst store = createStore(netflix, composeEnhancers( applyMiddleware(thunk)));\n\nconst app = (\n    <Provider store={store} >\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}